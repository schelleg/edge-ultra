FROM ubuntu:18.04

USER root

# Install all OS dependencies for fully functional notebook server
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata
RUN apt-get install -yq --no-install-recommends \
     build-essential libssl-dev libffi-dev python3-dev \
     python3-pandas python3-cffi python3-pip python3-setuptools \
     python3-wheel python3-matplotlib python3-pandas \
     gcc g++ git make wget

# Jupyter install and config (password: xilinx)
RUN pip3 install cython
RUN pip3 install jupyter
RUN jupyter notebook --generate-config
RUN mkdir -p /root/notebooks

RUN sed -i "/c.NotebookApp.open_browser/c c.NotebookApp.open_browser = False" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.ip/c c.NotebookApp.ip = '*'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.notebook_dir/c c.NotebookApp.notebook_dir = '/root'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.password/c c.NotebookApp.password = 'sha1:46c5ef4fa52f:ee46dad5008c6270a52f6272828a51b16336b492'" /root/.jupyter/jupyter_notebook_config.py


# Add Tini. Tini operates as a process subreaper for jupyter. This prevents
# kernel crashes.
ENV TINI_VERSION 0.18.0
RUN cd /tmp && wget --quiet https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-arm64 && \
  mv tini-arm64 /usr/local/bin/tini && \
  chmod +x /usr/local/bin/tini

ENTRYPOINT ["/usr/local/bin/tini", "--"]

# install PYNQ (with gcc patch)
RUN apt-get install -y libdrm-amdgpu1 libdrm-dev libdrm2
RUN apt-get install -y libjpeg-dev zlib1g-dev
RUN apt-get install -y libboost-all-dev

RUN git clone https://github.com/Xilinx/PYNQ
RUN cd PYNQ && git checkout --track origin/image_v2.6.0
RUN cd PYNQ/sdbuild/packages/libsds/libcma && make install
# RUN rm -rf PYNQ

#COPY libxlnk_cma.h /usr/include/
COPY xf86drm* /usr/include/
#COPY boost /usr/include/boost
RUN wget -O /usr/include/xf86drm.h https://raw.githubusercontent.com/grate-driver/libdrm/master/xf86drm.h
RUN wget -O /usr/include/xf86drmMode.h https://raw.githubusercontent.com/grate-driver/libdrm/master/xf86drmMode.h

RUN wget https://files.pythonhosted.org/packages/9f/4e/fca584f6d0cdbb6f6ee67a7def3342af190ff0efd2226262302d2bedc0b2/pynq-2.5.4.tar.gz
RUN tar xf pynq-2.5.4.tar.gz
RUN sed -i 's/-I=/-I/g' pynq-2.5.4/pynq/lib/_pynq/_displayport/Makefile
RUN rm -rf pynq-2.5.4.tar.gz
RUN tar czf pynq-2.5.4.tar.gz pynq-2.5.4
RUN pip3 install pynq-2.5.4.tar.gz --no-deps
RUN rm -rf pynq-2.5.4

# need lib/firmware for bitstream download
RUN mkdir /lib/firmware

# last file copies
COPY *.sh /
WORKDIR /
RUN chmod +x /*.sh

# start.sh will kick off Jupyter server on 8888 among other things...
EXPOSE 8888
CMD ["/start.sh"]

